// Code generated by "enumer -type ChartFutureField -trimprefix ChartFutureField"; DO NOT EDIT.

package td

import (
	"fmt"
	"strings"
)

const _ChartFutureFieldName = "SymbolTimeOpenPriceHighPriceLowPriceClosePriceVolume"

var _ChartFutureFieldIndex = [...]uint8{0, 6, 10, 19, 28, 36, 46, 52}

const _ChartFutureFieldLowerName = "symboltimeopenpricehighpricelowpriceclosepricevolume"

func (i ChartFutureField) String() string {
	if i >= ChartFutureField(len(_ChartFutureFieldIndex)-1) {
		return fmt.Sprintf("ChartFutureField(%d)", i)
	}
	return _ChartFutureFieldName[_ChartFutureFieldIndex[i]:_ChartFutureFieldIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ChartFutureFieldNoOp() {
	var x [1]struct{}
	_ = x[ChartFutureFieldSymbol-(0)]
	_ = x[ChartFutureFieldTime-(1)]
	_ = x[ChartFutureFieldOpenPrice-(2)]
	_ = x[ChartFutureFieldHighPrice-(3)]
	_ = x[ChartFutureFieldLowPrice-(4)]
	_ = x[ChartFutureFieldClosePrice-(5)]
	_ = x[ChartFutureFieldVolume-(6)]
}

var _ChartFutureFieldValues = []ChartFutureField{ChartFutureFieldSymbol, ChartFutureFieldTime, ChartFutureFieldOpenPrice, ChartFutureFieldHighPrice, ChartFutureFieldLowPrice, ChartFutureFieldClosePrice, ChartFutureFieldVolume}

var _ChartFutureFieldNameToValueMap = map[string]ChartFutureField{
	_ChartFutureFieldName[0:6]:        ChartFutureFieldSymbol,
	_ChartFutureFieldLowerName[0:6]:   ChartFutureFieldSymbol,
	_ChartFutureFieldName[6:10]:       ChartFutureFieldTime,
	_ChartFutureFieldLowerName[6:10]:  ChartFutureFieldTime,
	_ChartFutureFieldName[10:19]:      ChartFutureFieldOpenPrice,
	_ChartFutureFieldLowerName[10:19]: ChartFutureFieldOpenPrice,
	_ChartFutureFieldName[19:28]:      ChartFutureFieldHighPrice,
	_ChartFutureFieldLowerName[19:28]: ChartFutureFieldHighPrice,
	_ChartFutureFieldName[28:36]:      ChartFutureFieldLowPrice,
	_ChartFutureFieldLowerName[28:36]: ChartFutureFieldLowPrice,
	_ChartFutureFieldName[36:46]:      ChartFutureFieldClosePrice,
	_ChartFutureFieldLowerName[36:46]: ChartFutureFieldClosePrice,
	_ChartFutureFieldName[46:52]:      ChartFutureFieldVolume,
	_ChartFutureFieldLowerName[46:52]: ChartFutureFieldVolume,
}

var _ChartFutureFieldNames = []string{
	_ChartFutureFieldName[0:6],
	_ChartFutureFieldName[6:10],
	_ChartFutureFieldName[10:19],
	_ChartFutureFieldName[19:28],
	_ChartFutureFieldName[28:36],
	_ChartFutureFieldName[36:46],
	_ChartFutureFieldName[46:52],
}

// ChartFutureFieldString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ChartFutureFieldString(s string) (ChartFutureField, error) {
	if val, ok := _ChartFutureFieldNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ChartFutureFieldNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ChartFutureField values", s)
}

// ChartFutureFieldValues returns all values of the enum
func ChartFutureFieldValues() []ChartFutureField {
	return _ChartFutureFieldValues
}

// ChartFutureFieldStrings returns a slice of all String values of the enum
func ChartFutureFieldStrings() []string {
	strs := make([]string, len(_ChartFutureFieldNames))
	copy(strs, _ChartFutureFieldNames)
	return strs
}

// IsAChartFutureField returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ChartFutureField) IsAChartFutureField() bool {
	for _, v := range _ChartFutureFieldValues {
		if i == v {
			return true
		}
	}
	return false
}
